@{
    ViewData["Title"] = "Tool";
}
@model DevProdWebApp.ViewModels.SettingsViewModel
<h1>@ViewData["Tool Settings"]</h1>
<div>
   
  
    <div class="container">
        <div class="row">
            <div class="col-md-4"></div>
            <div class="col-md-4"> <h3> Customization</h3></div>
            </div>
           <div class="row">
                  <div class="col-md-8">
                      <div class="row">
 
                      
            
                    <div class="input-field col-md-8">
                        <select id="method" title="method" asp-for="@Model.Methodolgy" onchange="checkForWeights()">
                            <option value="sum">SUM</option>                          
                            <option value="wtsum">Weighted Sum Model</option>
                            <option value="wtprod">Weighted Product Model</option>
                            <option value="wtwaspas">Weighted Average Sum and Product Model</option>
                            <option value="gmean">Geometric Mean</option>
                        </select>
                        <label for="method">Methodology</label>
                    </div>
                    </div>
                    <div class="row">
                  
                    <div class="input-field col-md-8">
                        <select id="preproc" title="preproc" asp-for="@Model.Preprocessing">
                            <option value="">None</option>
                            <option value="minmax">Min Max</option>
                            <option value="zscore">Z-Score</option>
                        </select>
                        <label for="preproc">Data Preprocessing</label>
                    </div>
                      </div>
                <div class="row">
                    <div class="col-md-12">

                        <div class="file-field input-field">
                            <div class="btn">
                                <span>Upload File</span>
                                <input type="file">
                            </div>
                            <div class="file-path-wrapper">
                                <input class="file-path validate" type="text">
                            </div>
                        </div>

                    </div>
                    </div>
                <div class="row">
                   
                    <div class="col-md-2">
                        <a class="waves-effect waves-light btn" onclick="saveSettings()">Save</a>
                    </div>
                    <div class="col-md-2">
                        <a class="waves-effect waves-light btn" asp-action="ToolDashboard" asp-controller="Home">Back</a>
                    </div>
                </div>

          
                  </div>
                  <div class="col-md-4">
                      @for(int i = 0; i < Model.ToolMetricList.Count;i++)
                      {
                    string wtrowid = "wtm"+(i+1)+"row";
                    <div id="@wtrowid" class="row">
                        <div class="input-field col-md-12">
                            @if (Model.Methodolgy.Contains("wt"))
                            {
                                string inpId = "wtm" + (i + 1);
                                <input id="@inpId" type="text" value="@Model.ToolMetricList[i].Weight">
                                <label for="@inpId">Weight (@Model.ToolMetricList[i].Name)</label>
                            }
                          

                        </div>
                    </div>
                }
              
                <div id="lamrow" class="row">
                    <div class="input-field col-md-12">
                        @if (Model.Methodolgy == "wtwaspas" && Model.Parameters != null)
                        {
                            <input id="lam" type="text" value="@Model.Parameters">
                        }
                        else
                        {
                            <input id="lam" type="text">
                        }
                       
                        <label for="lam">λ (WASPAS)</label>

                    </div>
                </div>
                    
                  </div>
         
         
           </div>
        <div class="row">
            <div class="col-md-12">
                <ul class="tabs">
                    @for(int i = 0; i < Model.ToolMetricList.Count; i++)
                    {
                        string href = "#test"+i;
                   
                        string status = "active";
                        if(i>0)
                        {
                            status = "";
                        }
                        <li class="tab col-md-3"><a class="@status" href="@href">@Model.ToolMetricList[i].Name</a></li>
                    }
                   
                </ul>
            </div>
            @foreach(var metricScale in Model.ToolMetricScaleList)
            {
                <div id="test1" class="col-md-12">
                    <div class="row">
                        <div class="col-md-4">
                        </div>
                        <div class="col-md-4">
                            <h3>SCALE (@metricScale.MetricName)</h3>
                            <table id="tblm1" class="table-responsive">
                                <thead>
                                    <tr>
                                        <th>Rating</th>
                                        <th>Lower Bound</th>
                                        <th>Upper Bound</th>
                                    </tr>
                                </thead>
                                @if (metricScale.ScaleObjects.Count == 0)
                                {
                                    <tbody>

                                      
                                           @{
                                            int i = 0; 
                                            string desc = "tblm1_" + (i + 1);
                                            string ub = "tblm1l_" + (i + 1);
                                            string lb = "tblm1u_" + (i + 1);
                                        }
                                            <tr>
                                                <td>
                                                    <input id="@desc" type="text" placeholder="Rating">
                                                </td>
                                                <td>
                                                    <input id="@lb" type="text" placeholder="Lower Bound">
                                                </td>
                                                <td>
                                                    <input id="@ub" type="text" placeholder="Upper Bound">
                                                </td>
                                            </tr>
                                        

                                    </tbody>
                                }
                                else
                                {
                                    <tbody>
                                        @for(int i = 0; i < metricScale.ScaleObjects.Count; i++)
                                        {
                                            string desc = "tblm1_"+(i+1);
                                            string ub = "tblm1l_"+(i+1);
                                            string lb = "tblm1u_"+(i+1);
                                            <tr>
                                                <td>
                                                    <input id="@desc" type="text" placeholder="Rating">
                                                </td>
                                                <td>
                                                    <input id="@lb" type="text" placeholder="Lower Bound">
                                                </td>
                                                <td>
                                                    <input id="@ub" type="text" placeholder="Upper Bound">
                                                </td>
                                            </tr>
                                        }
                                      
                                    </tbody>
                                }
                            </table>
                            <a class="waves-effect waves-light btn" onclick="addNewRowBelow('tblm1')">Add Row</a>
                            <a class="waves-effect waves-light btn" onclick="deleteLastRow('tblm1')">Delete Row</a>
                            <a class="waves-effect waves-light btn" onclick="createScale('tblm1')">Save</a>
                        </div>
                        <div class="col-md-4">
                        </div>
                    </div>
                </div>
            }
            
      
        </div>
    </div>

</div>
<script type="text/javascript">
    
   function saveSettings() {
        var method = document.getElementById('method').value;
        var preproc = document.getElementById('preproc').value;
       var params = {};
       var paramJson = '';
       if (method == 'wtwaspas') {
            params = { 'wtm1': document.getElementById('wtm1').value, 'wtm2': document.getElementById('wtm2').value, 'wtm3': document.getElementById('wtm3').value, 'lam': document.getElementById('lam').value }
            paramJson = JSON.stringify(params);
       }
       else if(method.includes('wt'))
       {
           params = {
               'wtm1': document.getElementById('wtm1').value, 'wtm2': document.getElementById('wtm2').value, 'wtm3': document.getElementById('wtm3').value
           }
            paramJson = JSON.stringify(params);
       }
      
        $.ajax({
            type: "POST",
            url: '@Url.Action("SaveSettings", "Home")',
            data: { methodology:method, preprocessing:preproc, param:paramJson },
            success: function (response) {
             

            },
            error: function (xhr, status, error) {
               
            }
        });

    }

    document.addEventListener('DOMContentLoaded', function () {
        var elems = document.querySelectorAll('select');
        var options = document.querySelectorAll('option');
        var tabs = document.querySelectorAll('.tabs');
        var taboptions = document.querySelectorAll('li');
        var instances = M.FormSelect.init(elems, options);
        var instance = M.Tabs.init(tabs, taboptions);
        checkForWeights();
    });

    function checkForWeights() {
        var method = document.getElementById('method').value;
        var wtm1 = document.getElementById("wtm1row");
        var wtm2 = document.getElementById("wtm2row");
        var wtm3 = document.getElementById("wtm3row");
        var lam = document.getElementById("lamrow");
       
        if (method == 'wtwaspas') 
        {
            wtm1.style.display = "block";
            wtm2.style.display = "block";
            wtm3.style.display = "block";
            lam.style.display = "block";

        }
        else if (method.includes('wt')) {
            wtm1.style.display = "block";
            wtm2.style.display = "block";
            wtm3.style.display = "block";
            lam.style.display = "none";
        }
        else {
           
            wtm1.style.display = "none";
            wtm2.style.display = "none";
            wtm3.style.display = "none";
            lam.style.display = "none";
        }
       
    }

    function addNewRowBelow(tblName) {
        var totalRows = document.getElementById(tblName).rows.length;
        var rowNumberNew = parseInt(totalRows);
        var lastRow = document.getElementById(tblName).rows[totalRows - 1];
        console.log(lastRow);
         var newRow = $('<tr/>');

        newRow.html('<td><input id = "' + tblName + '_' + rowNumberNew + '" type = "text" placeholder = "Rating" ></td><td><input id="' + tblName + 'l_' + rowNumberNew + '" type = "text" placeholder = "Lower Bound"></td><td><input id="' + tblName + 'u_' + rowNumberNew + '" type = "text" placeholder = "Upper Bound" ></td>');

       

         $(newRow).insertAfter(lastRow);

      
    }

    function deleteLastRow(tblName) {
        var tbl = document.getElementById(tblName);
        var totalRows = tbl.rows.length;
        if (totalRows > 2) {
            tbl.deleteRow(totalRows - 1);
        }
    }

    function createScale(tbl) 
    {
        var tblElem = document.getElementById(tbl);
        var totalRows = tblElem.rows.length - 1;
        var scaleDef = [];
        for (var i = 1; i <= totalRows; i++) 
        {
            var name = document.getElementById(tbl + '_' + i).value
            var lower = document.getElementById(tbl + 'l_' + i).value
            var upper = document.getElementById(tbl + 'u_' + i).value;
            var item = {desc:name,lbound:lower,ubound:upper}
            scaleDef.push(item);
        }
        var scaleObj = {values:scaleDef}
        var jsonStr = JSON.stringify(scaleObj);
        $.ajax({
            type: "POST",
            url: '@Url.Action("SaveScale", "Home")',
            data: { scaleObject:jsonStr , table:tbl },
            success: function (response) {


            },
            error: function (xhr, status, error) {

            }
        });
    }
</script>