@{
    ViewData["Title"] = "Tool";
}
@model DevProdWebApp.ViewModels.SettingsViewModel
<h1>@ViewData["Tool Settings"]</h1>
<div>
   
  
    <div class="container">
        <div class="row">
            <div class="col-md-4"></div>
            <div class="col-md-4"> <h3> Customization</h3></div>
            </div>
           <div class="row">
                  <div class="col-md-8">
                      <div class="row">
 
                      
            
                    <div class="input-field col-md-8">
                        <select id="method" title="method" asp-for="@Model.Methodolgy">
                            <option value="sum">Sum</option>                          
                            <option value="wtamean">Weighted Sum Model</option>
                            <option value="wtprodmodel">Weighted Product Model</option>
                            <option value="wtsumprodmodel">Weighted Average Sum and Product Model</option>
                            <option value="gmean">Geometric Mean</option>
                        </select>
                        <label for="method">Methodology</label>
                    </div>
                    </div>
                    <div class="row">
                  
                    <div class="input-field col-md-8">
                        <select id="preproc" title="preproc" asp-for="@Model.Preprocessing">
                            <option value="">None</option>
                            <option value="minmax">Min Max</option>
                            <option value="zscore">Z-Score</option>
                        </select>
                        <label for="preproc">Data Preprocessing</label>
                    </div>
                      </div>
          
                  </div>
                  <div class="col-md-4">
                      <div class="row">
                            <div class="col-md-2">
                        <a class="waves-effect waves-light btn" onclick="saveSettings()">Save</a>
                            </div>
                    <div class="col-md-2">
                        <a class="waves-effect waves-light btn" asp-action="ToolDashboard" asp-controller="Home">Back</a>
                    </div>
                      </div>
                  </div>
         
         
           </div>
        <div class="row">
            <div class="col-md-12">
                <ul class="tabs">
                    <li class="tab col-md-3"><a href="#test1">m1</a></li>
                    <li class="tab col-md-3"><a class="active" href="#test2">m2</a></li>
                    <li class="tab col-md-3"><a href="#test3">m3</a></li>
                </ul>
            </div>
            <div id="test1" class="col-md-12">
                 <div class="row">
                       <div class="col-md-4">

                       </div>
                    <div class="col-md-4">
                          <h3>SCALE (m1)</h3>
                          <table id="tblm1" class="table-responsive">
                              <thead>
                                  <tr>
                                <th>Rating</th>
                                <th>Lower Bound</th>
                                 <th>Upper Bound</th>
                                  </tr>                           
                              </thead>
                            @if (Model.ScaleM1 != null && Model.ScaleM1.Count > 0)
                            {
                                <tbody>
                                        
                                        @for (int i = 0; i < Model.ScaleM1.Count; i++)
                                        {
                                       
                                        string row = "tblm1_" + (i+1);
                                        string rowl = "tblm1l_" + (i + 1);
                                        string rowu = "tblm1u_" + (i + 1);
                                        <tr>
                                            <td>
                                                <input id="@row" type="text" placeholder="Rating" value="@Model.ScaleM1[i]["desc"]">
                                            </td>
                                            <td>
                                                <input id="@rowl" type="text" placeholder="Lower Bound" value="@Model.ScaleM1[i]["lbound"]">
                                            </td>
                                            <td>
                                                <input id="@rowu" type="text" placeholder="Upper Bound" value="@Model.ScaleM1[i]["ubound"]">
                                            </td>
                                        </tr>                                       
                                }
                                  
                                </tbody>
                            }
                            else
                            {
                                <tbody>
                                    <tr>
                                        <td>
                                            <input id="tblm1_1" type="text" placeholder="Rating">
                                        </td>
                                        <td>
                                            <input id="tblm1l_1" type="text" placeholder="Lower Bound">
                                        </td>
                                        <td>
                                            <input id="tblm1u_1" type="text" placeholder="Upper Bound">
                                        </td>
                                    </tr>
                                </tbody>
                            }                                                                  
                          </table>
                        <a class="waves-effect waves-light btn" onclick="addNewRowBelow('tblm1')">Add Row</a>
                        <a class="waves-effect waves-light btn" onclick="deleteLastRow('tblm1')">Delete Row</a>
                        <a class="waves-effect waves-light btn" onclick="createScale('tblm1')">Save</a>
                    </div>
                    <div class="col-md-4">
                    </div>
                 </div>
            </div>
            <div id="test2" class="col-md-12">
                <div class="row">
                    <div class="col-md-4">
                    </div>
                    <div class="col-md-4">
                        <h3>SCALE (m2)</h3>
                        <table id="tblm2" class="table-responsive">
                            <thead>
                                <tr>
                                    <th>Rating</th>
                                    <th>Lower Bound</th>
                                    <th>Upper Bound</th>
                                </tr>

                            </thead>

                            @if (Model.ScaleM2 != null &&  Model.ScaleM2.Count > 0)
                            {
                                <tbody>

                                    @for (int i = 0; i < Model.ScaleM2.Count; i++)
                                    {

                                        string row = "tblm2_" + (i + 1);
                                        string rowl = "tblm2l_" + (i + 1);
                                        string rowu = "tblm2u_" + (i + 1);
                                        <tr>
                                            <td>
                                                <input id="@row" type="text" placeholder="Rating" value="@Model.ScaleM2[i]["desc"]">
                                            </td>
                                            <td>
                                                <input id="@rowl" type="text" placeholder="Lower Bound" value="@Model.ScaleM2[i]["lbound"]">
                                            </td>
                                            <td>
                                                <input id="@rowu" type="text" placeholder="Upper Bound" value="@Model.ScaleM2[i]["ubound"]">
                                            </td>
                                        </tr>
                                    }

                                </tbody>
                            }
                            else
                            {
                                <tbody>
                                    <tr>
                                        <td>
                                            <input id="tblm2_1" type="text" placeholder="Rating">
                                        </td>
                                        <td>
                                            <input id="tblm2l_1" type="text" placeholder="Lower Bound">
                                        </td>
                                        <td>
                                            <input id="tblm2u_1" type="text" placeholder="Upper Bound">
                                        </td>
                                    </tr>
                                </tbody>
                            }
                          


                        </table>
                        <a class="waves-effect waves-light btn" onclick="addNewRowBelow('tblm2')">Add Row</a>
                        <a class="waves-effect waves-light btn" onclick="deleteLastRow('tblm2')">Delete Row</a>
                        <a class="waves-effect waves-light btn" onclick ="createScale('tblm2')">Save</a>
                    </div>
                    <div class="col-md-4">
                    </div>
                </div>
            </div>
            <div id="test3" class="col-md-12">
                <div class="row">
                    <div class="col-md-4">
                    </div>
                    <div class="col-md-4">
                        <h3>SCALE (m3)</h3>
                        <table id="tblm3" class="table-responsive">
                            <thead>
                                <tr>
                                    <th>Rating</th>
                                    <th>Lower Bound</th>
                                    <th>Upper Bound</th>
                                </tr>

                            </thead>
                            @if (Model.ScaleM3 != null && Model.ScaleM3.Count > 0)
                            {
                                <tbody>

                                    @for (int i = 0; i < Model.ScaleM3.Count; i++)
                                    {

                                        string row = "tblm3_" + (i + 1);
                                        string rowl = "tblm3l_" + (i + 1);
                                        string rowu = "tblm3u_" + (i + 1);
                                        <tr>
                                            <td>
                                                <input id="@row" type="text" placeholder="Rating" value="@Model.ScaleM3[i]["desc"]">
                                            </td>
                                            <td>
                                                <input id="@rowl" type="text" placeholder="Lower Bound" value="@Model.ScaleM3[i]["lbound"]">
                                            </td>
                                            <td>
                                                <input id="@rowu" type="text" placeholder="Upper Bound" value="@Model.ScaleM3[i]["ubound"]">
                                            </td>
                                        </tr>
                                    }

                                </tbody>
                            }
                            else
                            {
                                <tbody>
                                    <tr>
                                        <td>
                                            <input id="tblm3_1" type="text" placeholder="Rating">
                                        </td>
                                        <td>
                                            <input id="tblm3l_1" type="text" placeholder="Lower Bound">
                                        </td>
                                        <td>
                                            <input id="tblm3u_1" type="text" placeholder="Upper Bound">
                                        </td>
                                    </tr>
                                </tbody>
                            }
                          
                        </table>
                        <a class="waves-effect waves-light btn" onclick="addNewRowBelow('tblm3')">Add Row</a>
                        <a class="waves-effect waves-light btn" onclick="deleteLastRow('tblm3')">Delete Row</a>
                        <a class="waves-effect waves-light btn" onclick="createScale('tblm3')">Save</a>
                    </div>
                    <div class="col-md-4">
                    </div>
                </div>
            </div>
      
        </div>
    </div>

</div>
<script type="text/javascript">
    
   function saveSettings() {
        var method = document.getElementById('method').value;
        var preproc = document.getElementById('preproc').value;
        $.ajax({
            type: "POST",
            url: '@Url.Action("SaveSettings", "Home")',
            data: { methodology:method, preprocessing:preproc },
            success: function (response) {
             

            },
            error: function (xhr, status, error) {
               
            }
        });

    }

    document.addEventListener('DOMContentLoaded', function () {
        var elems = document.querySelectorAll('select');
        var options = document.querySelectorAll('option');
        var tabs = document.querySelectorAll('.tabs');
        var taboptions = document.querySelectorAll('li');
        var instances = M.FormSelect.init(elems, options);
        var instance = M.Tabs.init(tabs, taboptions);
    });

    function addNewRowBelow(tblName) {
        var totalRows = document.getElementById(tblName).rows.length;
        var rowNumberNew = parseInt(totalRows);
        var lastRow = document.getElementById(tblName).rows[totalRows - 1];
        console.log(lastRow);
         var newRow = $('<tr/>');

        newRow.html('<td><input id = "' + tblName + '_' + rowNumberNew + '" type = "text" placeholder = "Rating" ></td><td><input id="' + tblName + 'l_' + rowNumberNew + '" type = "text" placeholder = "Lower Bound"></td><td><input id="' + tblName + 'u_' + rowNumberNew + '" type = "text" placeholder = "Upper Bound" ></td>');

       

         $(newRow).insertAfter(lastRow);

      
    }

    function deleteLastRow(tblName) {
        var tbl = document.getElementById(tblName);
        var totalRows = tbl.rows.length;
        if (totalRows > 2) {
            tbl.deleteRow(totalRows - 1);
        }
    }

    function createScale(tbl) 
    {
        var tblElem = document.getElementById(tbl);
        var totalRows = tblElem.rows.length - 1;
        var scaleDef = [];
        for (var i = 1; i <= totalRows; i++) 
        {
            var name = document.getElementById(tbl + '_' + i).value
            var lower = document.getElementById(tbl + 'l_' + i).value
            var upper = document.getElementById(tbl + 'u_' + i).value;
            var item = {desc:name,lbound:lower,ubound:upper}
            scaleDef.push(item);
        }
        var scaleObj = {values:scaleDef}
        var jsonStr = JSON.stringify(scaleObj);
        $.ajax({
            type: "POST",
            url: '@Url.Action("SaveScale", "Home")',
            data: { scaleObject:jsonStr , table:tbl },
            success: function (response) {


            },
            error: function (xhr, status, error) {

            }
        });
    }
</script>